workflows:
  android-release:
    name: Android Release
    max_build_duration: 60
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "main"
          include: true
    environment:
      flutter: stable
      groups:
        - SECRET
      vars:
        GOOGLE_DRIVE_FOLDER_ID: "1CK55EUd0suHdmIm_cowoHI4LCzwczQfm"
        APK_NAME: "groute_pro.apk"
        GCLOUD_SERVICE_ACCOUNT_JSON: $GCLOUD_SERVICE_ACCOUNT_JSON
    scripts:
      - name: Install dependencies
        script: |
          echo "Installing required dependencies..."
          which jq || (brew install jq || sudo apt-get update && sudo apt-get install -y jq)
          which curl || (brew install curl || sudo apt-get update && sudo apt-get install -y curl)
          which openssl || (brew install openssl || sudo apt-get update && sudo apt-get install -y openssl)

      - name: Build APK
        script: flutter build apk --release --dart-define=ENVIRONMENT=production

      - name: Upload APK to Google Drive
        script: |
          # Create service account file from environment variable
          echo "Creating service account file..."
          echo "$GCLOUD_SERVICE_ACCOUNT_JSON" > gcloud-service-key.json

          # Verify the service account file was created properly
          if [ ! -s "gcloud-service-key.json" ]; then
            echo "Error: Service account file is empty or was not created"
            exit 1
          fi

          # Set up variables
          APK_PATH=build/app/outputs/flutter-apk/app-release.apk
          FOLDER_ID="$GOOGLE_DRIVE_FOLDER_ID"
          APK_NAME="$APK_NAME"

          # Check if APK exists
          if [ ! -f "$APK_PATH" ]; then
            echo "Error: APK file not found at $APK_PATH"
            exit 1
          fi

          echo "Authenticating with Google Drive API..."
          # Get access token
          ACCESS_TOKEN=$(curl -s --request POST \
            --url "https://oauth2.googleapis.com/token" \
            --header "Content-Type: application/json" \
            --data "{\"client_email\": \"$(jq -r '.client_email' gcloud-service-key.json)\", \"private_key\": \"$(jq -r '.private_key' gcloud-service-key.json)\", \"token_uri\": \"https://oauth2.googleapis.com/token\", \"grant_type\": \"urn:ietf:params:oauth:grant-type:jwt-bearer\", \"scope\": \"https://www.googleapis.com/auth/drive\"}" | jq -r '.access_token')

          if [ -z "$ACCESS_TOKEN" ] || [ "$ACCESS_TOKEN" == "null" ]; then
            echo "Error: Failed to get access token"
            exit 1
          fi

          echo "Checking for existing file..."
          # Delete existing file if present
          EXISTING_FILE=$(curl -s -H "Authorization: Bearer $ACCESS_TOKEN" \
            "https://www.googleapis.com/drive/v3/files?q=name='$APK_NAME'+and+'$FOLDER_ID'+in+parents+and+trashed=false")
          FILE_ID=$(echo $EXISTING_FILE | jq -r '.files[0].id')

          if [ -n "$FILE_ID" ] && [ "$FILE_ID" != "null" ]; then
            echo "Deleting existing file with ID: $FILE_ID"
            curl -s -X DELETE -H "Authorization: Bearer $ACCESS_TOKEN" \
              "https://www.googleapis.com/drive/v3/files/$FILE_ID"
          fi

          echo "Uploading APK to Google Drive..."
          # Upload APK
          UPLOAD_RESPONSE=$(curl -s -X POST -L \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -F "metadata={name:'$APK_NAME',parents:['$FOLDER_ID']};type=application/json;charset=UTF-8" \
            -F "file=@$APK_PATH;type=application/vnd.android.package-archive" \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart")

          # Clean up
          rm -f gcloud-service-key.json

          # Check upload status
          if [[ $UPLOAD_RESPONSE == *"id"* ]]; then
            UPLOADED_FILE_ID=$(echo $UPLOAD_RESPONSE | jq -r '.id')
            echo "Upload successful! File ID: $UPLOADED_FILE_ID"
          else
            echo "Upload failed. Response: $UPLOAD_RESPONSE"
            exit 1
          fi
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
