{
    "sourceFile": "lib/presentation/modules/dashboard/inventory/screens/request_van_stock/request_van_stock_list_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753945800718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753945800718,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter_bloc/flutter_bloc.dart';\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart';\nimport 'package:groute_nartec/core/constants/app_colors.dart';\nimport 'package:groute_nartec/core/utils/app_navigator.dart';\nimport 'package:groute_nartec/core/utils/app_snackbars.dart';\nimport 'package:groute_nartec/presentation/modules/dashboard/inventory/cubit/request_stock/request_stock_cubit.dart';\nimport 'package:groute_nartec/presentation/modules/dashboard/inventory/screens/request_van_stock/request_van_stock_screen.dart';\nimport 'package:groute_nartec/presentation/modules/dashboard/start_day/models/loading/product_on_pallet.dart';\nimport 'package:groute_nartec/presentation/modules/dashboard/start_day/view/widgets/product_on_pallet_card.dart';\nimport 'package:groute_nartec/presentation/widgets/buttons/custom_elevated_button.dart';\nimport 'package:groute_nartec/presentation/widgets/custom_scaffold.dart';\n\nclass RequestVanStockListScreen extends StatefulWidget {\n  const RequestVanStockListScreen({super.key});\n\n  @override\n  State<RequestVanStockListScreen> createState() =>\n      _RequestVanStockListScreenState();\n}\n\nclass _RequestVanStockListScreenState extends State<RequestVanStockListScreen>\n    with TickerProviderStateMixin {\n  // Controllers for text fields\n  final TextEditingController _palletNumberController = TextEditingController();\n  late AnimationController _fadeController;\n  late AnimationController _slideController;\n  late Animation<double> _fadeAnimation;\n  late Animation<Offset> _slideAnimation;\n\n  @override\n  void initState() {\n    RequestStockCubit.get(context).init();\n\n    // Initialize animations\n    _fadeController = AnimationController(\n      duration: const Duration(milliseconds: 600),\n      vsync: this,\n    );\n    _slideController = AnimationController(\n      duration: const Duration(milliseconds: 800),\n      vsync: this,\n    );\n\n    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(\n      CurvedAnimation(parent: _fadeController, curve: Curves.easeInOut),\n    );\n\n    _slideAnimation = Tween<Offset>(\n      begin: const Offset(0, 0.3),\n      end: Offset.zero,\n    ).animate(\n      CurvedAnimation(parent: _slideController, curve: Curves.elasticOut),\n    );\n\n    // Start animations\n    _fadeController.forward();\n    _slideController.forward();\n\n    super.initState();\n  }\n\n  @override\n  void dispose() {\n    _palletNumberController.dispose();\n    _fadeController.dispose();\n    _slideController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final theme = Theme.of(context);\n    final isDark = theme.brightness == Brightness.dark;\n\n    return CustomScaffold(\n      title: \"Request Van Stock\",\n      automaticallyImplyLeading: true,\n      body: FadeTransition(\n        opacity: _fadeAnimation,\n        child: SlideTransition(\n          position: _slideAnimation,\n          child: Container(\n            decoration: BoxDecoration(\n              gradient: LinearGradient(\n                begin: Alignment.topCenter,\n                end: Alignment.bottomCenter,\n                colors:\n                    isDark\n                        ? [\n                          AppColors.darkBackground,\n                          AppColors.darkBackground.withValues(alpha: 0.8),\n                        ]\n                        : [AppColors.lightBackground, Colors.grey[50]!],\n              ),\n            ),\n            child: BlocConsumer<RequestStockCubit, RequestStockState>(\n              listenWhen:\n                  (previous, current) =>\n                      current is RequestStockScanItemError ||\n                      current is RequestStockScanItemLoaded,\n              listener: (context, state) {\n                if (state is RequestStockScanItemError) {\n                  AppSnackbars.danger(context, state.message);\n                  // Clear the input field after error\n                  _palletNumberController.clear();\n                } else if (state is RequestStockScanItemLoaded) {\n                  // Clear the input field after successful scan\n                  _palletNumberController.clear();\n                }\n              },\n              buildWhen:\n                  (previous, current) =>\n                      current is RequestStockChangeScanType ||\n                      current is RequestStockScanItemLoaded ||\n                      current is RequestStockAddRequestItemLoaded,\n              builder: (context, state) {\n                return Padding(\n                  padding: const EdgeInsets.all(16.0),\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      // Header section with stats\n                      _buildHeaderSection(isDark),\n\n                      const SizedBox(height: 20),\n\n                      // Add items button with enhanced styling\n                      _buildAddItemsButton(isDark),\n\n                      const SizedBox(height: 20),\n\n                      // Scanned items section with enhanced styling\n                      Expanded(child: _buildScannedItemsSection(isDark)),\n                    ],\n                  ),\n                );\n              },\n            ),\n          ),\n        ),\n      ),\n      bottomNavigationBar: _buildActionButtons(),\n    );\n  }\n\n  Widget _buildHeaderSection(bool isDark) {\n    final cubit = RequestStockCubit.get(context);\n    final totalItems = cubit.productOnPalletsAdded.values.fold<int>(\n      0,\n      (sum, items) => sum + items.length,\n    );\n\n    return Container(\n      padding: const EdgeInsets.all(20),\n      decoration: BoxDecoration(\n        gradient: LinearGradient(\n          begin: Alignment.topLeft,\n          end: Alignment.bottomRight,\n          colors:\n              isDark\n                  ? [\n                    AppColors.primaryDark.withValues(alpha: 0.2),\n                    AppColors.primaryBlue.withValues(alpha: 0.1),\n                  ]\n                  : [\n                    AppColors.primaryBlue.withValues(alpha: 0.1),\n                    AppColors.primaryLight.withValues(alpha: 0.05),\n                  ],\n        ),\n        borderRadius: BorderRadius.circular(16),\n        border: Border.all(\n          color:\n              isDark\n                  ? AppColors.primaryLight.withValues(alpha: 0.2)\n                  : AppColors.primaryBlue.withValues(alpha: 0.2),\n          width: 1,\n        ),\n        boxShadow: [\n          BoxShadow(\n            color: (isDark ? AppColors.primaryDark : AppColors.primaryBlue)\n                .withValues(alpha: 0.1),\n            blurRadius: 10,\n            offset: const Offset(0, 4),\n          ),\n        ],\n      ),\n      child: Row(\n        children: [\n          Container(\n            padding: const EdgeInsets.all(12),\n            decoration: BoxDecoration(\n              color:\n                  isDark\n                      ? AppColors.primaryLight.withValues(alpha: 0.1)\n                      : AppColors.primaryBlue.withValues(alpha: 0.1),\n              borderRadius: BorderRadius.circular(12),\n            ),\n            child: FaIcon(\n              FontAwesomeIcons.boxesStacked,\n              color: isDark ? AppColors.primaryLight : AppColors.primaryBlue,\n              size: 24,\n            ),\n          ),\n          const SizedBox(width: 16),\n          Expanded(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  \"Items in Request\",\n                  style: TextStyle(\n                    fontSize: 14,\n                    color:\n                        isDark\n                            ? AppColors.textLight.withValues(alpha: 0.7)\n                            : AppColors.textMedium,\n                    fontWeight: FontWeight.w500,\n                  ),\n                ),\n                const SizedBox(height: 4),\n                Text(\n                  \"$totalItems Items\",\n                  style: TextStyle(\n                    fontSize: 24,\n                    fontWeight: FontWeight.bold,\n                    color:\n                        isDark ? AppColors.primaryLight : AppColors.primaryBlue,\n                  ),\n                ),\n              ],\n            ),\n          ),\n          if (totalItems > 0)\n            Container(\n              padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n              decoration: BoxDecoration(\n                color: AppColors.success.withValues(alpha: 0.1),\n                borderRadius: BorderRadius.circular(20),\n                border: Border.all(\n                  color: AppColors.success.withValues(alpha: 0.3),\n                ),\n              ),\n              child: Row(\n                mainAxisSize: MainAxisSize.min,\n                children: [\n                  Icon(\n                    Icons.check_circle_outline,\n                    size: 16,\n                    color: AppColors.success,\n                  ),\n                  const SizedBox(width: 4),\n                  Text(\n                    \"Ready\",\n                    style: TextStyle(\n                      fontSize: 12,\n                      fontWeight: FontWeight.w600,\n                      color: AppColors.success,\n                    ),\n                  ),\n                ],\n              ),\n            ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildAddItemsButton(bool isDark) {\n    return Container(\n      width: double.infinity,\n      decoration: BoxDecoration(\n        borderRadius: BorderRadius.circular(16),\n        boxShadow: [\n          BoxShadow(\n            color: AppColors.orange.withValues(alpha: 0.3),\n            blurRadius: 12,\n            offset: const Offset(0, 6),\n          ),\n        ],\n      ),\n      child: CustomElevatedButton(\n        title: \"Add New Items\",\n        width: double.infinity,\n        height: 56,\n        backgroundColor: AppColors.orange,\n        onPressed: () {\n          AppNavigator.push(context, RequestVanStockScreen());\n        },\n        // borderRadius: 16,\n        // child: Row(\n        //   mainAxisAlignment: MainAxisAlignment.center,\n        //   children: [\n        //     const FaIcon(FontAwesomeIcons.plus, color: Colors.white, size: 18),\n        //     const SizedBox(width: 12),\n        //     const Text(\n        //       \"Add New Items\",\n        //       style: TextStyle(\n        //         fontSize: 16,\n        //         fontWeight: FontWeight.w600,\n        //         color: Colors.white,\n        //       ),\n        //     ),\n        //   ],\n        // ),\n      ),\n    );\n  }\n\n  Widget _buildScannedItemsSection(bool isDark) {\n    final cubit = RequestStockCubit.get(context);\n    final productOnPallets = cubit.productOnPalletsAdded;\n\n    return BlocBuilder<RequestStockCubit, RequestStockState>(\n      builder: (context, state) {\n        return Container(\n          decoration: BoxDecoration(\n            color:\n                isDark\n                    ? AppColors.grey900.withValues(alpha: 0.3)\n                    : Colors.white,\n            borderRadius: BorderRadius.circular(16),\n            border: Border.all(\n              color:\n                  isDark\n                      ? AppColors.grey700.withValues(alpha: 0.5)\n                      : AppColors.grey300.withValues(alpha: 0.5),\n            ),\n            boxShadow: [\n              BoxShadow(\n                color: Colors.black.withValues(alpha: isDark ? 0.2 : 0.05),\n                blurRadius: 10,\n                offset: const Offset(0, 4),\n              ),\n            ],\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              // Section header\n              Container(\n                padding: const EdgeInsets.all(20),\n                decoration: BoxDecoration(\n                  color:\n                      isDark\n                          ? AppColors.grey800.withValues(alpha: 0.3)\n                          : AppColors.grey50,\n                  borderRadius: const BorderRadius.only(\n                    topLeft: Radius.circular(16),\n                    topRight: Radius.circular(16),\n                  ),\n                ),\n                child: Row(\n                  children: [\n                    FaIcon(\n                      FontAwesomeIcons.listCheck,\n                      size: 18,\n                      color:\n                          isDark\n                              ? AppColors.primaryLight\n                              : AppColors.primaryBlue,\n                    ),\n                    const SizedBox(width: 12),\n                    Text(\n                      \"Requested Items\",\n                      style: TextStyle(\n                        fontSize: 18,\n                        fontWeight: FontWeight.bold,\n                        color:\n                            isDark ? AppColors.textLight : AppColors.textDark,\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n\n              // Content\n              Expanded(\n                child:\n                    productOnPallets.isEmpty\n                        ? _buildEmptyScannedItems(isDark)\n                        : Padding(\n                          padding: const EdgeInsets.all(16),\n                          child: SingleChildScrollView(\n                            physics: const AlwaysScrollableScrollPhysics(),\n                            child: _buildScannedItemsList(isDark),\n                          ),\n                        ),\n              ),\n            ],\n          ),\n        );\n      },\n    );\n  }\n\n  Widget _buildScannedItemsList(bool isDark) {\n    final cubit = RequestStockCubit.get(context);\n    final productOnPallets = cubit.productOnPalletsAdded;\n\n    return Column(\n      children:\n          productOnPallets.entries.map((entry) {\n            final String keyCode = entry.key;\n            final List<ProductOnPallet> items = entry.value;\n\n            return BlocBuilder<RequestStockCubit, RequestStockState>(\n              buildWhen:\n                  (previous, current) =>\n                      current is RequestStockSelectionChanged ||\n                      current is RequestStockItemRemoved ||\n                      current is RequestStockAddRequestItemLoaded,\n              builder: (context, state) {\n                return Container(\n                  margin: const EdgeInsets.only(bottom: 16),\n                  decoration: BoxDecoration(\n                    color:\n                        isDark\n                            ? AppColors.grey800.withValues(alpha: 0.3)\n                            : Colors.white,\n                    borderRadius: BorderRadius.circular(12),\n                    border: Border.all(\n                      color:\n                          isDark\n                              ? AppColors.primaryLight.withValues(alpha: 0.2)\n                              : AppColors.primaryBlue.withValues(alpha: 0.2),\n                    ),\n                    boxShadow: [\n                      BoxShadow(\n                        color: Colors.black.withValues(\n                          alpha: isDark ? 0.1 : 0.03,\n                        ),\n                        blurRadius: 8,\n                        offset: const Offset(0, 2),\n                      ),\n                    ],\n                  ),\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      // Package header\n                      Container(\n                        padding: const EdgeInsets.all(16),\n                        decoration: BoxDecoration(\n                          color:\n                              isDark\n                                  ? AppColors.primaryDark.withValues(alpha: 0.2)\n                                  : AppColors.primaryBlue.withValues(\n                                    alpha: 0.05,\n                                  ),\n                          borderRadius: const BorderRadius.only(\n                            topLeft: Radius.circular(12),\n                            topRight: Radius.circular(12),\n                          ),\n                        ),\n                        child: Row(\n                          children: [\n                            Container(\n                              padding: const EdgeInsets.all(8),\n                              decoration: BoxDecoration(\n                                color:\n                                    isDark\n                                        ? AppColors.primaryLight.withValues(\n                                          alpha: 0.1,\n                                        )\n                                        : AppColors.primaryBlue.withValues(\n                                          alpha: 0.1,\n                                        ),\n                                borderRadius: BorderRadius.circular(8),\n                              ),\n                              child: FaIcon(\n                                FontAwesomeIcons.box,\n                                size: 16,\n                                color:\n                                    isDark\n                                        ? AppColors.primaryLight\n                                        : AppColors.primaryBlue,\n                              ),\n                            ),\n                            const SizedBox(width: 12),\n                            Expanded(\n                              child: Column(\n                                crossAxisAlignment: CrossAxisAlignment.start,\n                                children: [\n                                  Text(\n                                    \"Package Code\",\n                                    style: TextStyle(\n                                      fontSize: 12,\n                                      color:\n                                          isDark\n                                              ? AppColors.textLight.withValues(\n                                                alpha: 0.7,\n                                              )\n                                              : AppColors.textMedium,\n                                      fontWeight: FontWeight.w500,\n                                    ),\n                                  ),\n                                  const SizedBox(height: 2),\n                                  Text(\n                                    keyCode,\n                                    style: TextStyle(\n                                      fontSize: 16,\n                                      fontWeight: FontWeight.bold,\n                                      color:\n                                          isDark\n                                              ? AppColors.primaryLight\n                                              : AppColors.primaryBlue,\n                                    ),\n                                  ),\n                                ],\n                              ),\n                            ),\n                            Container(\n                              padding: const EdgeInsets.symmetric(\n                                horizontal: 12,\n                                vertical: 6,\n                              ),\n                              decoration: BoxDecoration(\n                                color: AppColors.info.withValues(alpha: 0.1),\n                                borderRadius: BorderRadius.circular(20),\n                                border: Border.all(\n                                  color: AppColors.info.withValues(alpha: 0.3),\n                                ),\n                              ),\n                              child: Text(\n                                \"${items.length} items\",\n                                style: TextStyle(\n                                  fontSize: 12,\n                                  fontWeight: FontWeight.w600,\n                                  color: AppColors.info,\n                                ),\n                              ),\n                            ),\n                          ],\n                        ),\n                      ),\n\n                      // Items list\n                      Padding(\n                        padding: const EdgeInsets.all(12),\n                        child: Column(\n                          children:\n                              items.map((item) {\n\n                                return Container(\n                                  margin: const EdgeInsets.only(bottom: 8),\n                                  child: ProductOnPalletCard(\n                                    item: item,\n                                    isSelected: true,\n                                    onSelectionChanged: (selected) {\n                                      // cubit.toggleItemSelection(keyCode, itemId);\n                                    },\n                                    onRemove: () {\n                                      cubit.removeItemFromRequestList(\n                                        keyCode,\n                                        item,\n                                      );\n                                    },\n                                  ),\n                                );\n                              }).toList(),\n                        ),\n                      ),\n                    ],\n                  ),\n                );\n              },\n            );\n          }).toList(),\n    );\n  }\n\n  Widget _buildEmptyScannedItems(bool isDark) {\n    return Container(\n      width: double.infinity,\n      padding: const EdgeInsets.all(40),\n      child: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Container(\n            padding: const EdgeInsets.all(24),\n            decoration: BoxDecoration(\n              color:\n                  isDark\n                      ? AppColors.grey700.withValues(alpha: 0.3)\n                      : AppColors.grey100,\n              shape: BoxShape.circle,\n            ),\n            child: FaIcon(\n              FontAwesomeIcons.boxOpen,\n              size: 48,\n              color:\n                  isDark\n                      ? AppColors.textLight.withValues(alpha: 0.5)\n                      : AppColors.textMedium.withValues(alpha: 0.5),\n            ),\n          ),\n          const SizedBox(height: 24),\n          Text(\n            \"No items added yet\",\n            style: TextStyle(\n              fontSize: 20,\n              fontWeight: FontWeight.w600,\n              color:\n                  isDark\n                      ? AppColors.textLight.withValues(alpha: 0.8)\n                      : AppColors.textDark,\n            ),\n          ),\n          const SizedBox(height: 8),\n          Text(\n            \"Tap 'Add New Items' to start building your request\",\n            style: TextStyle(\n              fontSize: 14,\n              color:\n                  isDark\n                      ? AppColors.textLight.withValues(alpha: 0.6)\n                      : AppColors.textMedium.withValues(alpha: 0.8),\n            ),\n            textAlign: TextAlign.center,\n          ),\n          const SizedBox(height: 24),\n          Container(\n            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\n            decoration: BoxDecoration(\n              color: AppColors.info.withValues(alpha: 0.1),\n              borderRadius: BorderRadius.circular(20),\n              border: Border.all(color: AppColors.info.withValues(alpha: 0.3)),\n            ),\n            child: Row(\n              mainAxisSize: MainAxisSize.min,\n              children: [\n                FaIcon(\n                  FontAwesomeIcons.lightbulb,\n                  size: 14,\n                  color: AppColors.info,\n                ),\n                const SizedBox(width: 8),\n                Text(\n                  \"Use the button above to add items\",\n                  style: TextStyle(\n                    fontSize: 12,\n                    fontWeight: FontWeight.w500,\n                    color: AppColors.info,\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildActionButtons() {\n    return Container(\n      padding: const EdgeInsets.all(16.0),\n      decoration: BoxDecoration(\n        color: Theme.of(context).scaffoldBackgroundColor,\n        boxShadow: [\n          BoxShadow(\n            color: Colors.black.withValues(alpha: 0.05),\n            blurRadius: 10,\n            offset: const Offset(0, -2),\n          ),\n        ],\n      ),\n      child: SafeArea(\n        child: Row(\n          children: [\n            Expanded(\n              child: Container(\n                decoration: BoxDecoration(\n                  borderRadius: BorderRadius.circular(12),\n                  boxShadow: [\n                    BoxShadow(\n                      color: AppColors.secondary.withValues(alpha: 0.2),\n                      blurRadius: 8,\n                      offset: const Offset(0, 4),\n                    ),\n                  ],\n                ),\n                child: CustomElevatedButton(\n                  onPressed: () {\n                    Navigator.pop(context);\n                  },\n                  title: \"Back\",\n                  width: double.infinity,\n                  height: 48,\n                  backgroundColor: AppColors.secondary,\n                ),\n              ),\n            ),\n            const SizedBox(width: 16),\n            Expanded(\n              child: BlocConsumer<RequestStockCubit, RequestStockState>(\n                listener: (context, state) {\n                  if (state is RequestStockRequestItemsLoaded) {\n                    AppSnackbars.success(\n                      context,\n                      \"Items requested successfully\",\n                    );\n                    Navigator.pop(context);\n                  } else if (state is RequestStockRequestItemsError) {\n                    AppSnackbars.danger(context, state.message);\n                  }\n                },\n                builder: (context, state) {\n                  return Container(\n                    decoration: BoxDecoration(\n                      borderRadius: BorderRadius.circular(12),\n                      boxShadow:\n                          RequestStockCubit.get(\n                                context,\n                              ).productOnPalletsAdded.isNotEmpty\n                              ? [\n                                BoxShadow(\n                                  color: AppColors.success.withValues(\n                                    alpha: 0.3,\n                                  ),\n                                  blurRadius: 8,\n                                  offset: const Offset(0, 4),\n                                ),\n                              ]\n                              : [],\n                    ),\n                    child: CustomElevatedButton(\n                      onPressed:\n                          RequestStockCubit.get(\n                                context,\n                              ).productOnPalletsAdded.isNotEmpty\n                              ? () {\n                                RequestStockCubit.get(context).requestItems();\n                              }\n                              : null,\n                      title: \"Submit Request\",\n                      width: double.infinity,\n                      height: 48,\n                      backgroundColor:\n                          RequestStockCubit.get(\n                                context,\n                              ).productOnPalletsAdded.isNotEmpty\n                              ? AppColors.success\n                              : AppColors.grey400,\n                      buttonState:\n                          state is RequestStockRequestItemsLoading\n                              ? ButtonState.loading\n                              : RequestStockCubit.get(\n                                context,\n                              ).productOnPalletsAdded.isNotEmpty\n                              ? ButtonState.idle\n                              : ButtonState.disabled,\n                    ),\n                  );\n                },\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}